name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  mix_test:
    runs-on: ubuntu-18.04
    env:
      MIX_ENV: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: "1.11"
              otp: 21
          - pair:
              elixir: "1.13"
              otp: 24
            lint: lint
    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.pair.otp}}
          elixir-version: ${{matrix.pair.elixir}}

      - name: Install Dependencies
        run: mix deps.get

      - run: mix format --check-formatted
        if: ${{ matrix.lint }}

      - run: mix deps.unlock --check-unused
        if: ${{ matrix.lint }}

      - run: mix deps.compile

      - run: mix compile --warnings-as-errors
        if: ${{ matrix.lint }}

      - run: mix test

      - name: Prerelease
        run: test/prerelease.sh

      - name: Generate ExDoc docs
        run: |
          mix docs
          test -f doc/index.html && echo "doc/index.html exists."
          test -f doc/ExDoc.epub && echo "doc/ExDoc.epub exists."

      - name: Generate Elixir docs
        env:
          MIX_ENV: dev
        run: |
          echo "Compiling ExDoc with MIX_ENV=dev"
          mix deps.get
          mix compile

          echo "Cloning Elixir repository"
          cd ..
          git config --global advice.detachedHead false
          git clone https://github.com/elixir-lang/elixir.git --depth 1 --branch v${{ matrix.pair.elixir }}.0

          echo "Building Elixir docs"
          cd elixir
          make docs
          for app in elixir eex ex_unit iex logger mix; do
            test -f doc/${app}/index.html && echo "doc/${app}/index.html exists."
          done

  check_js:
    name: Check JS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.3
      - name: Set up Node.js 10.x
        uses: actions/setup-node@v1.4.4
        with:
          node-version: 10.10.0
      - run: npm install --prefix assets
      - run: npm run --prefix assets lint

      - run: sudo apt-get install xvfb
      - name: npm install, build, and test
        run: |
          xvfb-run --auto-servernum npm run --prefix assets test
        env:
          CI: true
