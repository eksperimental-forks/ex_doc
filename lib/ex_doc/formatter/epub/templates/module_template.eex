<%= head_template(config, %{title: translate(config, module.title)}) %>
    <h1 id="content">
      <%= translate(config, H.module_title(module)) %>
    </h1>

    <%= if doc = module.rendered_doc do %>
      <section id="moduledoc" class="docstring">
        <%= doc %>
      </section>
    <% end %>

    <%= if Enum.any?(summary, fn {_, v} -> v != [] end) do %>
      <section id="summary" class="details-list">
        <h1 class="section-heading">
          <a class="hover-link" href="#summary">
            <span class="icon-link" aria-hidden="true"></span>
            <span class="sr-only"><%= translate(config, "Anchor for this section")%></span>
          </a>
          <%= translate(config, "Summary")%>
        </h1>
        <%= for {name, nodes} <- summary, do: H.summary_template(name, nodes, config) %>
      </section>
    <% end %>

    <%= for {name, nodes} <- summary, nodes != [], key = HTML.text_to_id(name) do %>
      <section id="<%= key %>" class="details-list">
        <h1 class="section-heading">
          <a class="hover-link" href="#<%= key %>">
            <span class="icon-link" aria-hidden="true"></span>
            <span class="sr-only"><%= translate(config, "Anchor for this section")%></span>
          </a>
          <%= translate(config, name) %>
        </h1>
        <div class="<%= key %>-list">
          <%= for node <- nodes, do: H.detail_template(node, module, config) %>
        </div>
      </section>
    <% end %>
    <%# Extra content needed by the current markdown processor (e.g. custom Javascript) %>
    <%= ExDoc.Markdown.get_markdown_processor().before_closing_body_tag(:epub) %>
    <%# Extra content specified by the user (e.g. custom Javascript) %>
    <%= config.before_closing_body_tag.(:epub) %>
  </body>
</html>
